// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  user_id            String
  type              String
  provider          String
  provider_account_id String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model Session {
  id           String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires      DateTime
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User {
  id            String              @id @default(cuid())
  name          String?
  email         String?             @unique
  email_verified DateTime?
  image         String?
  role          Role?               @relation(fields: [role_id], references: [id])
  role_id        String?
  accounts      Account[]
  sessions      Session[]
  materials     Material[]
  movements     InventoryMovement[]
}

model Material {
  id        String              @id @default(cuid())
  name      String              @unique
  quantity  Int
  created_by User                @relation(fields: [user_id], references: [id])
  user_id    String
  movements InventoryMovement[]
  created_at DateTime            @default(now())
  updated_at DateTime            @updated_at
}

enum Enum_Movement_type {
  ENTRADA
  SALIDA
}

model InventoryMovement {
  id           String            @id @default(cuid())
  movement_type Enum_Movement_type
  quantity     Int
  material     Material          @relation(fields: [material_id], references: [id])
  material_id   String
  created_by    User              @relation(fields: [user_id], references: [id])
  user_id       String
}

enum Enum_RoleName {
  ADMIN
  USER
}

model Role {
  id   String        @id @default(cuid())
  name Enum_RoleName @unique

  created_at DateTime @default(now())
  updated_at DateTime @updated_at
  users     User[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
